modules: [kge.model, kge.model.embedder, sem_kge.model, sem_kge.model.embedder]

job:
  type: search
search:
  type: ax
  on_error: continue
dataset.name: fb15k-237-typed

train:
  max_epochs: 400
  auto_correct: true

valid:
  every: 5
  metric: mean_reciprocal_rank_filtered_with_test
  early_stopping:
    patience: 10
    min_threshold:
      epochs: 50
      metric_value: 0.05

eval:
  batch_size: 256
  metrics_per:
    relation_type: true
  trace_level: example

import:
- transe
- type_prior_embedder
- reciprocal_relations_model

reciprocal_relations_model:
  base_model:
    type: transe
    entity_embedder.prior_embedder.kl_loss: False
transe:
  entity_embedder:
    type: type_prior_embedder


ax_search:
  num_trials: 30
  num_sobol_trials: 30
  
  parameter_constraints:
    - lookup_embedder.dim <= type_prior_embedder.dim
    - lookup_embedder.dim >= type_prior_embedder.dim
  
  parameters:

    # model
    - name: model
      type: fixed
      value: reciprocal_relations_model
      
    # training hyperparameters
    - name: train.batch_size
      type: choice
      values: [128, 256, 512, 1024]
      is_ordered: True
    - name: train.type
      type: fixed
      value: negative_sampling
    - name: train.optimizer.default.type
      type: choice
      values: [Adam, Adagrad]
    - name: train.loss
      type: fixed
      value: kl
    - name: train.optimizer.default.args.lr
      type: range
      bounds: [0.0001, 1.]
      log_scale: True
    - name: train.lr_scheduler
      type: fixed
      value: ReduceLROnPlateau
    - name: train.lr_scheduler_args.mode
      type: fixed
      value: max
    - name: train.lr_scheduler_args.factor
      type: fixed
      value: 0.95
    - name: train.lr_scheduler_args.threshold
      type: fixed
      value: 0.0001
    - name: train.lr_scheduler_args.patience
      type: range
      bounds: [0, 10]

    # embedding dimension
    - name: lookup_embedder.dim
      type: range 
      bounds: [64, 384]
    - name: type_prior_embedder.dim
      type: range 
      bounds: [64, 384]
      
    # embedding initialization
    - name: lookup_embedder.initialize
      type: choice
      values: [xavier_normal_, xavier_uniform_, normal_, uniform_]  
    - name: lookup_embedder.initialize_args.normal_.mean
      type: fixed
      value: 0.0
    - name: lookup_embedder.initialize_args.normal_.std
      type: range
      bounds: [0.00001, 1.0]
      log_scale: True
    - name: lookup_embedder.initialize_args.uniform_.a
      type: range
      bounds: [-1.0, -0.00001]
    - name: lookup_embedder.initialize_args.xavier_uniform_.gain
      type: fixed
      value: 1.0
    - name: lookup_embedder.initialize_args.xavier_normal_.gain
      type: fixed
      value: 1.0
  
    # embedding regularization
    - name: lookup_embedder.regularize
      type: choice
      values: ['', 'lp']
    - name: lookup_embedder.regularize_args.p
      type: choice
      values: [1, 2, 3]
      is_ordered: True
    - name: lookup_embedder.regularize_args.weighted
      type: choice
      values: [True, False]
    - name: transe.entity_embedder.base_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      log_scale: True
    - name: transe.entity_embedder.prior_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      log_scale: True
    - name: transe.relation_embedder.regularize_weight
      type: range
      bounds: [1.0e-20, 1.0e-01]
      log_scale: True

    # embedding dropout
    - name: transe.entity_embedder.base_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]
    - name: transe.relation_embedder.dropout
      type: range
      bounds: [-0.5, 0.5]

    # training-type specific hyperparameters
    - name: negative_sampling.num_samples.s   #train_type = negative_sampling
      type: range                             #train_type = negative_sampling
      bounds: [1, 1000]                       #train_type = negative_sampling
      log_scale: True                         #train_type = negative_sampling
    - name: negative_sampling.num_samples.o   #train_type = negative_sampling
      type: range                             #train_type = negative_sampling
      bounds: [1, 1000]                       #train_type = negative_sampling
      log_scale: True                         #train_type = negative_sampling
    - name: negative_sampling.shared
      type: fixed
      value: True
    - name: negative_sampling.implementation
      type: fixed
      value: batch

    #
    - name: entity_ranking.chunk_size
      type: fixed
      value: 1024

    # model-specific entries
    - name: type_prior_embedder.prior_embedder.scale_embedder.initialize_args.val
      type: range
      bounds: [0., 1.]
    - name: type_prior_embedder.nll_max_threshold
      type: range
      bounds: [-20., 0.]

